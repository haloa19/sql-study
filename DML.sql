/*
 * DML (DATA MANIPULATION LANGUAGE)
 * 데이터 조작어: INSERT, UPDATE, DELETE, SELECT
 * 접근하는 테이블을 메모리 버퍼에 올려놓고 작업하므로 명령어 수행 후 직접 COMMIT 실행
 * */
/* INSERT */
-- 일부컬럼 지정
INSERT INTO PLAYER (PLAYER_ID, PLAYER_NAME, TEAM_ID, POSITION, HEIGHT, WEIGHT, BACK_NO) VALUES ('2021001', '박지성', 'K07', 'MF', 178, 73, 7);
-- 모든 컬럼 삽입
INSERT INTO PLAYER ('2021002', '이청용', 'K07', '', 'BlueDragon', '2002', 'MF', '17',  NULL, NULL, '1', 180, 77, '경기도 고양시');
-- 여러 행 한번에 삽입
INSERT INTO PLAYER (PLAYER_ID, PLAYER_NAME, TEAM_ID, POSITION, HEIGHT, WEIGHT, BACK_NO) 
	VALUES ('2021001', '박지성', 'K07', 'MF', 178, 73, 7)
			,('2021002', '이청용', 'K07', 'MF', 180, 77, 8)
			,('2021003', '손흥민', 'K07', 'DF', 188, 87, 11)


/* UPDATE */
-- 모든 데이터의 값을 변경
UPDATE PLAYER SET BACK_NO = 99;
UPDATE PLAYER SET POSITION = 'MF';
-- 특정 조건만 변경
UPDATE PLAYER SET BACK_NO = 7 WHERE PLAYER_ID = '2021001';
UPDATE PLAYER SET BACK_NO = 17 WHERE PLAYER_ID = '2021002';

/* DELETE */
-- 테이블의 모든 값 삭제
DELETE FROM TEAM;
DELETE FROM PLAYER;
-- 테이블의 모든 값 삭제 - FROM생략
DELETE TEAM;
-- 조건을 걸어서 삭제
DELETE FROM PLAYER WHERE PLAYER_ID = '2021001';

/* SELECT */
-- 전체 조회 (ALL, * 둘다 가능)
SELECT ALL
FROM PLAYER;
-- 컬럼 명시하여 조회
SELECT PLAYER_ID, PLAYER_NAME, TEAM_ID, POSITION, HEIGHT, WEIGHT, BACK_NO 
FROM PLAYER;
-- DISTINCT 중복제거
SELECT DISTINCT POSITION
FROM PLAYER;
-- WILDCARD 전체보기
SELECT *
FROM PLAYER;
-- ALIAS 컬럼명 변경
SELECT PLAYER_NAME AS 선수명, POSITION "그라운드 포지션", HEIGHT '선수키(CM)', WEIGHT [선수 몸무게(KG)]
FROM PLAYER;
-- 산술연산 사용
SELECT PLAYER_NAME 이름, HEIGHT 키, WEIGHT 몸무게, HEIGHT-WEIGHT '키-몸무게', ROUND(WEIGHT/((HEIGHT/100)*(HEIGHT/100)), 2) AS BMI지수
FROM PLAYER;
-- 합성연산 사용
-- 1) ORACLE
SELECT PLAYER_NAME || '선수, ' || HEIGHT || 'CM, ' || WEIGHT || 'KG' AS 체격정보
FROM PLAYER;
-- 2) SQL Server
SELECT PLAYER_NAME + '선수, ' + HEIGHT + 'CM, ' + WEIGHT + 'KG' AS 체격정보
FROM PLAYER;
-- 3) 둘다 가능
SELECT CONCAT(CONCAT(PLAYER_NAME, '선수'), HEIGHT) AS 체격정보
FROM PLAYER;